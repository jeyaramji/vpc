---

- name: VPC | Create VPC
  ec2_vpc_net:
    name:             "{{ vpc_name }}"
    cidr_block:       "{{ vpc_cidr_block }}"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    state:            "present"
  register: my_vpc

- name: VPC | Set VPC ID in variable
  set_fact:
    vpc_id:           "{{ my_vpc.vpc.id }}"


- name: SUBNET | Create Public Subnet [AZ-1]
  ec2_vpc_subnet:
    state:            "present"
    vpc_id:           "{{ vpc_id }}"
    cidr:             "10.0.1.0/24"
    az:               "{{ aws_region }}b"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    resource_tags:
      Name:           "{{ vpc_name }}-Public_subnet-{{ aws_region }}b"
  register: my_public_subnet_az1

- name: SUBNET | Set Public Subnet ID in variable [AZ-1]
  set_fact:
    public_subnet_az1_id: "{{ my_public_subnet_az1.subnet.id }}"

- name: SUBNET | Create Private Subnet [AZ-1]
  ec2_vpc_subnet:
    state:            "present"
    vpc_id:           "{{ vpc_id }}"
    cidr:             "10.0.2.0/24"
    az:               "{{ aws_region }}b"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    resource_tags:
      Name:           "{{ vpc_name }}-Private_subnet-{{ aws_region }}b"
  register: my_private_subnet_az1

- name: SUBNET | Set Private Subnet ID in variable [AZ-1]
  set_fact:
    private_subnet_az1_id: "{{ my_private_subnet_az1.subnet.id }}"

- name: SUBNET | Create Public Subnet [AZ-2]
  ec2_vpc_subnet:
    state:            "present"
    vpc_id:           "{{ vpc_id }}"
    cidr:             "10.0.11.0/24"
    az:               "{{ aws_region }}c"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    resource_tags:
      Name:           "{{ vpc_name }}-Public_subnet-{{ aws_region }}c"
  register: my_public_subnet_az2

- name: SUBNET | Set Public Subnet ID in variable [AZ-2]
  set_fact:
    public_subnet_az2_id: "{{ my_public_subnet_az2.subnet.id }}"

- name: SUBNET | Create Private Subnet [AZ-2]
  ec2_vpc_subnet:
    state:            "present"
    vpc_id:           "{{ vpc_id }}"
    cidr:             "10.0.12.0/24"
    az:               "{{ aws_region }}c"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    resource_tags:
      Name:           "{{ vpc_name }}-Private_subnet-{{ aws_region }}c"
  register: my_private_subnet_az2

- name: SUBNET | Set Private Subnet ID in variable [AZ-2]
  set_fact:
    private_subnet_az2_id: "{{ my_private_subnet_az2.subnet.id }}"


- name: IGW |  Create Internet Gateway for VPC
  ec2_vpc_igw:
    vpc_id:           "{{ vpc_id }}"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    state:            "present"
  register: my_vpc_igw

- name:               Set Internet Gateway ID in variable
  set_fact:
    igw_id:           "{{ my_vpc_igw.gateway_id }}"


- name: NGW | Create NAT Gateway [AZ-1]
  ec2_vpc_nat_gateway:
    state: present
    subnet_id: "{{ public_subnet_az1_id }}"
    wait: yes
    region: "{{ aws_region }}"
    if_exist_do_not_create: true
  register: my_nat_gateway_z1

- name: NGW | Set Nat Gateway ID in variable [AZ-1]
  set_fact:
    nat_gateway_az1_id: "{{ my_nat_gateway_z1.nat_gateway_id }}"

- name: NGW | Create NAT Gateway [AZ-2]
  ec2_vpc_nat_gateway:
    state: present
    subnet_id: "{{ public_subnet_az2_id }}"
    wait: yes
    region: "{{ aws_region }}"
    if_exist_do_not_create: true
  register: my_nat_gateway_z2

- name: NGW | Set Nat Gateway ID in variable [AZ-2]
  set_fact:
    nat_gateway_az2_id: "{{ my_nat_gateway_z2.nat_gateway_id }}"

- name: ROUTE-TABLE | Set up public subnet route table
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    tags:
      Name: "{{ vpc_name }}-Public_RT-{{ aws_region }}"
    subnets:
      - "{{ public_subnet_az1_id }}"
      - "{{ public_subnet_az2_id }}"
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{ igw_id }}"

- name: ROUTE-TABLE | Set up private subnet route table [AZ-1]
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    tags:
      Name: "{{ vpc_name }}-Private_RT-{{ aws_region }}"
    subnets:
      - "{{ private_subnet_az1_id }}"
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{ nat_gateway_az1_id }}"

- name: ROUTE-TABLE | Set up private subnet route table [AZ-2]
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    tags:
      Name: "{{ vpc_name }}-Private_RT-{{ aws_region }}"
    subnets:
      - "{{ private_subnet_az2_id }}"
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{ nat_gateway_az2_id }}"


- name: SG | Create Main Security Group
  ec2_group:
    name: "{{ vpc_name }}-External SSH Access"
    description: "External SSH Access"
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    rules:
      - proto: "tcp"
        from_port: "22"
        to_port: "22"
        cidr_ip: "{{ my_ip }}"
  register: my_main_sg

- name: SG | Set Main SG ID
  set_fact:
    main_sg_id: "{{ my_main_sg.group_id }}"

- name: SG | Create Private Security Group
  ec2_group:
    name: "{{ vpc_name }}-Private Instances SG"
    description: "Private Instances SG"
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    rules:
      - proto: "tcp"
        from_port: "22"
        to_port: "22"
        group_id: "{{ main_sg_id }}"
